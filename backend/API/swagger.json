{
  "openapi": "3.0.3",
  "info": {
    "title": "SipScore API",
    "version": "1.0.0",
    "description": "API documentation for SipScore application"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Local server"
    }
  ],
  "tags": [
    { "name": "Session", "description": "Session management" },
    { "name": "User", "description": "User registration and management" },
    { "name": "Role", "description": "User role management" },
    { "name": "Beverage", "description": "Beverage queries" },
    { "name": "Rating", "description": "Beverage ratings" }
  ],
  "paths": {
    "/sessions": {
      "get": {
        "tags": ["Session"],
        "summary": "Get session user",
        "description": "Returns the current session user.",
        "responses": {
          "200": {
            "description": "Session active",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "401": { "description": "No session active" }
        }
      },
      "post": {
        "tags": ["Session"],
        "summary": "Login",
        "description": "Authenticate user and start session.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "credential": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["credential", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "user": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "401": { "description": "Invalid credentials" },
          "403": { "description": "Email not verified" }
        }
      },
      "delete": {
        "tags": ["Session"],
        "summary": "Logout",
        "description": "Destroys the current session.",
        "responses": {
          "200": { "description": "Logout successful" },
          "500": { "description": "Logout failed" }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "description": "Returns all verified, non-deleted users.",
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/User" }
                }
              }
            }
          },
          "500": { "description": "Server error" }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Signup",
        "description": "Create a new user and send verification code.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": { "type": "string" },
                  "lastName": { "type": "string" },
                  "email": { "type": "string" },
                  "username": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "User created, verification sent" },
          "400": { "description": "Invalid email format" },
          "409": { "description": "Email or username already in use" }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user by ID",
        "description": "Returns a single verified, non-deleted user by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              }
            }
          },
          "404": { "description": "User not found" },
          "500": { "description": "Server error" }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update User / Verify Email",
        "description": "Update user details or verify email with code.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request": { "type": "object" },
                  "action": { "type": "string" }
                },
                "required": ["id", "code"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "User updated / Email verified" },
          "400": { "description": "You fucked up: {error}" }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user",
        "description": "Soft delete user by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "204": { "description": "User deleted" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/roles/{id}": {
      "put": {
        "tags": ["Role"],
        "summary": "Promote user role",
        "description": "Change the role of a user (admin only).",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newRole": { "type": "integer", "minimum": 0, "maximum": 3 }
                },
                "required": ["newRole"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "User role updated" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "User not found" },
          "400": { "description": "Invalid role specified" }
        }
      }
    },
    "/beverages": {
      "get": {
        "tags": ["Beverage"],
        "summary": "Get filtered beverages",
        "description": "Returns a filtered list of beverages. All filters are optional.",
        "parameters": [
          {
            "name": "Typ_Id",
            "in": "query",
            "description": "Comma separated Typ IDs",
            "schema": { "type": "string" }
          },
          {
            "name": "Geschmack_Id",
            "in": "query",
            "description": "Comma separated Geschmack IDs",
            "schema": { "type": "string" }
          },
          {
            "name": "Min_Alter",
            "in": "query",
            "description": "Minimum age in months",
            "schema": { "type": "integer" }
          },
          {
            "name": "Max_Alter",
            "in": "query",
            "description": "Maximum age in months",
            "schema": { "type": "integer" }
          },
          {
            "name": "Min_Alkohol",
            "in": "query",
            "description": "Minimum alcohol content",
            "schema": { "type": "number" }
          },
          {
            "name": "Max_Alkohol",
            "in": "query",
            "description": "Maximum alcohol content",
            "schema": { "type": "number" }
          },
          {
            "name": "Auf_Lager",
            "in": "query",
            "description": "true for in stock, false for out of stock",
            "schema": { "type": "string", "enum": ["true", "false"] }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": { "type": "integer", "default": 1 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "schema": { "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort field",
            "schema": { "type": "string", "default": "Getraenk_Id" }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sort order",
            "schema": {
              "type": "string",
              "enum": ["ASC", "DESC"],
              "default": "ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Filtered beverage list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Beverage" }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "No beverages found" }
        }
      },
      "post": {
        "tags": ["Beverage"],
        "summary": "Create a new beverage",
        "description": "Creates a new beverage. Only users with role 'Brauer' (1) are allowed.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Typ_Id": { "type": "integer" },
                  "Startgravitation": { "type": "number" },
                  "BeginnFermentation": { "type": "string", "format": "date" },
                  "Abfuellung": { "type": "string", "format": "date" },
                  "Alkoholgehalt": { "type": "number" },
                  "Lager": { "type": "integer" },
                  "Beschreibung": { "type": "string" },
                  "Geschmack_Ids": {
                    "type": "array",
                    "items": { "type": "integer" },
                    "description": "Array of Geschmack IDs"
                  },
                  "Rezept": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "Zutat_Id": { "type": "integer" },
                        "Menge": { "type": "string" }
                      },
                      "required": ["Zutat_Id", "Menge"]
                    },
                    "description": "Array of ingredients with Zutat_Id and Menge"
                  }
                },
                "required": [
                  "Typ_Id",
                  "Startgravitation",
                  "BeginnFermentation",
                  "Abfuellung",
                  "Alkoholgehalt",
                  "Lager",
                  "Beschreibung",
                  "Geschmack_Ids"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Beverage created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "id": { "type": "integer" }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Type, flavor or ingredient not found" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/beverages/best": {
      "get": {
        "tags": ["Beverage"],
        "summary": "Get best beverages by type",
        "description": "Returns the beverage with the best average rating for each type. Only accessible for authenticated users.",
        "responses": {
          "200": {
            "description": "Best beverages per type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Typ_Id": { "type": "integer" },
                      "Typ": { "type": "string" },
                      "Getraenk_Id": { "type": "integer" },
                      "Beschreibung": { "type": "string" },
                      "Durchschnittsbewertung": { "type": "number" }
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/beverages/{id}": {
      "get": {
        "tags": ["Beverage"],
        "summary": "Get beverage by ID",
        "description": "Returns a single beverage by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the beverage",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Beverage found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Beverage" }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Beverage not found" }
        }
      },
      "put": {
        "tags": ["Beverage"],
        "summary": "Update beverage",
        "description": "Updates an existing beverage. Only users with role 'Brauer' (1) are allowed.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the beverage",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Typ_Id": { "type": "integer" },
                  "Startgravitation": { "type": "number" },
                  "BeginnFermentation": { "type": "string", "format": "date" },
                  "Abfuellung": { "type": "string", "format": "date" },
                  "Alkoholgehalt": { "type": "number" },
                  "Lager": { "type": "integer" },
                  "Beschreibung": { "type": "string" },
                  "Geschmack_Ids": {
                    "type": "array",
                    "items": { "type": "integer" },
                    "description": "Array of Geschmack IDs"
                  },
                  "Rezept": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "Zutat_Id": { "type": "integer" },
                        "Menge": { "type": "string" }
                      },
                      "required": ["Zutat_Id", "Menge"]
                    },
                    "description": "Array of ingredients with Zutat_Id and Menge"
                  }
                },
                "required": [
                  "Typ_Id",
                  "Startgravitation",
                  "BeginnFermentation",
                  "Abfuellung",
                  "Alkoholgehalt",
                  "Lager",
                  "Beschreibung",
                  "Geschmack_Ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Beverage updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "id": { "type": "integer" }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": {
            "description": "Beverage, type, flavor or ingredient not found"
          },
          "500": { "description": "Server error" }
        }
      },
      "delete": {
        "tags": ["Beverage"],
        "summary": "Delete beverage",
        "description": "Soft deletes a beverage by its ID. Only users with role 'Brauer' (1) are allowed.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the beverage",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "204": { "description": "Beverage deleted" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Beverage not found" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/beverages/{id}/ratings": {
      "get": {
        "tags": ["Rating"],
        "summary": "Get ratings for a beverage",
        "description": "Returns paginated ratings for a beverage, only from verified users and brewers.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the beverage",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": { "type": "integer", "default": 1 }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size",
            "schema": { "type": "integer", "default": 20 }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort field",
            "schema": { "type": "string", "default": "Datum" }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sort order",
            "schema": {
              "type": "string",
              "enum": ["ASC", "DESC"],
              "default": "DESC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated ratings for beverage",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Bewertung": { "type": "integer" },
                      "Kommentar": { "type": "string" },
                      "Datum": { "type": "string", "format": "date" },
                      "Benutzername": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "Beverage not found" }
        }
      },
      "post": {
        "tags": ["Rating"],
        "summary": "Create a rating for a beverage",
        "description": "Creates a new rating for a beverage. Only verified users and brewers (role 1 or 2) are allowed.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the beverage",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": { "type": "integer", "minimum": 1, "maximum": 5 },
                  "comment": { "type": "string" }
                },
                "required": ["rating"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Rating created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "id": { "type": "integer" }
                  }
                }
              }
            }
          },
          "400": { "description": "Invalid rating value" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Beverage not found" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/ratings/{id}": {
      "put": {
        "tags": ["Rating"],
        "summary": "Update a rating",
        "description": "Updates an existing rating. Only the owner (verified user or brewer) can update their own rating.",
        "parameters": [
          {
            "name": "rid",
            "in": "path",
            "required": true,
            "description": "ID of the rating",
            "schema": { "type": "integer" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": { "type": "integer", "minimum": 1, "maximum": 5 },
                  "comment": { "type": "string" }
                },
                "required": ["rating"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rating updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": { "description": "Invalid rating value" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden (not owner or not allowed)" },
          "404": { "description": "Rating not found" },
          "500": { "description": "Server error" }
        }
      },
      "delete": {
        "tags": ["Rating"],
        "summary": "Delete a rating",
        "description": "Soft deletes a rating by its ID. Only the owner or an admin can delete a rating.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the rating",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "204": { "description": "Rating deleted" },
          "400": { "description": "Invalid rating value" },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden (not owner or not allowed)" },
          "404": { "description": "Rating or beverage not found" },
          "500": { "description": "Server error" }
        }
      }
    },
    "components": {
      "schemas": {
        "Beverage": {
          "type": "object",
          "properties": {
            "Getraenk_Id": { "type": "integer" },
            "Typ_Id": { "type": "integer" },
            "Startgravitation": { "type": "number" },
            "BeginnFermentation": { "type": "string", "format": "date" },
            "Abfuellung": { "type": "string", "format": "date" },
            "Alkoholgehalt": { "type": "number" },
            "Lager": { "type": "integer" },
            "Beschreibung": { "type": "string" },
            "Geloescht": { "type": "boolean" },
            "Typ": { "type": "string" },
            "Geschmaecker": { "type": "string" }
          }
        },
        "User": {
          "type": "object",
          "properties": {
            "Benutzer_Id": { "type": "integer" },
            "Vorname": { "type": "string" },
            "Nachname": { "type": "string" },
            "Email": { "type": "string" },
            "Benutzername": { "type": "string" },
            "Rolle": { "type": "string" },
            "Verifiziert": { "type": "boolean" },
            "Geloescht": { "type": "boolean" }
          }
        }
      }
    }
  }
}
